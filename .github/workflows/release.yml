name: Release

on:
  push:
    tags:
      - "v*" # Triggers on version tags like v1.0.0, v0.1.1, etc.

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pip install pytest pytest-cov
          pytest --cov=saldo

      - name: Build package
        run: |
          python -m build

      - name: Extract version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          # Extract changes since last tag
          PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          if [ -n "$PREVIOUS_TAG" ]; then
            CHANGELOG=$(git log --pretty=format:"- %s" $PREVIOUS_TAG..HEAD)
          else
            CHANGELOG=$(git log --pretty=format:"- %s")
          fi

          # Save changelog to file for multiline output
          echo "$CHANGELOG" > changelog.txt

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.VERSION }}
          body_path: changelog.txt
          draft: false
          prerelease: ${{ contains(steps.get_version.outputs.VERSION, 'alpha') || contains(steps.get_version.outputs.VERSION, 'beta') || contains(steps.get_version.outputs.VERSION, 'rc') }}

      - name: Upload wheel to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/saldo-${{ steps.get_version.outputs.VERSION }}-py3-none-any.whl
          asset_name: saldo-${{ steps.get_version.outputs.VERSION }}-py3-none-any.whl
          asset_content_type: application/zip

      - name: Upload source distribution to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/saldo-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_name: saldo-${{ steps.get_version.outputs.VERSION }}.tar.gz
          asset_content_type: application/gzip
